// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pawgress.Data;

#nullable disable

namespace Pawgress.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250112153204_manytomanytrainingpaths")]
    partial class manytomanytrainingpaths
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryLesson", b =>
                {
                    b.Property<Guid>("LibraryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LibraryId", "LessonId");

                    b.HasIndex("LessonId");

                    b.ToTable("LibraryLesson");
                });

            modelBuilder.Entity("LibraryQuiz", b =>
                {
                    b.Property<Guid>("LibraryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LibraryId", "QuizId");

                    b.HasIndex("QuizId");

                    b.ToTable("LibraryQuiz");
                });

            modelBuilder.Entity("Pawgress.Models.DogProfile", b =>
                {
                    b.Property<Guid>("DogProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DogProfileId");

                    b.ToTable("DogProfiles");
                });

            modelBuilder.Entity("Pawgress.Models.DogSensorData", b =>
                {
                    b.Property<Guid>("DogSensorDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DogProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SensorType")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DogSensorDataId");

                    b.HasIndex("DogProfileId");

                    b.ToTable("DogSensorData");
                });

            modelBuilder.Entity("Pawgress.Models.Folder", b =>
                {
                    b.Property<Guid>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentFolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FolderId");

                    b.HasIndex("ParentFolderId");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Pawgress.Models.Library", b =>
                {
                    b.Property<Guid>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LibraryId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("Pawgress.Models.Note", b =>
                {
                    b.Property<Guid>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DogProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NoteId");

                    b.HasIndex("DogProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Pawgress.Models.QuizQuestion", b =>
                {
                    b.Property<Guid>("QuizQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuizId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("QuizQuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Pawgress.Models.TrainingPath", b =>
                {
                    b.Property<Guid>("TrainingPathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TrainingPathId");

                    b.ToTable("TrainingPaths");
                });

            modelBuilder.Entity("Pawgress.Models.TrainingPathItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Unnamed Item");

                    b.Property<Guid?>("TrainingPathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TrainingPathItems");

                    b.HasDiscriminator<string>("ItemType").HasValue("TrainingPathItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Pawgress.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pawgress.Models.User_DogProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DogProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFavorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "DogProfileId");

                    b.HasIndex("DogProfileId");

                    b.ToTable("UserDogProfiles");
                });

            modelBuilder.Entity("Pawgress.Models.User_TrainingPath", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingPathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Progress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "TrainingPathId");

                    b.HasIndex("TrainingPathId");

                    b.ToTable("UserTrainingPaths");
                });

            modelBuilder.Entity("TrainingPathItemOrder", b =>
                {
                    b.Property<Guid>("TrainingPathId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingPathItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("TrainingPathId", "TrainingPathItemId");

                    b.HasIndex("TrainingPathItemId");

                    b.ToTable("TrainingPathItemOrders");
                });

            modelBuilder.Entity("Pawgress.Models.Lesson", b =>
                {
                    b.HasBaseType("Pawgress.Models.TrainingPathItem");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkdownContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("FolderId");

                    b.ToTable("TrainingPathItems", t =>
                        {
                            t.Property("FolderId")
                                .HasColumnName("Lesson_FolderId");
                        });

                    b.HasDiscriminator().HasValue("Lesson");
                });

            modelBuilder.Entity("Pawgress.Models.Quiz", b =>
                {
                    b.HasBaseType("Pawgress.Models.TrainingPathItem");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("FolderId");

                    b.HasDiscriminator().HasValue("Quiz");
                });

            modelBuilder.Entity("LibraryLesson", b =>
                {
                    b.HasOne("Pawgress.Models.Lesson", "Lesson")
                        .WithMany("LibraryLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawgress.Models.Library", "Library")
                        .WithMany("LibraryLessons")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("LibraryQuiz", b =>
                {
                    b.HasOne("Pawgress.Models.Library", "Library")
                        .WithMany("LibraryQuizzes")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawgress.Models.Quiz", "Quiz")
                        .WithMany("LibraryQuizzes")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Pawgress.Models.DogSensorData", b =>
                {
                    b.HasOne("Pawgress.Models.DogProfile", "DogProfile")
                        .WithMany("DogSensorDatas")
                        .HasForeignKey("DogProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DogProfile");
                });

            modelBuilder.Entity("Pawgress.Models.Folder", b =>
                {
                    b.HasOne("Pawgress.Models.Folder", "ParentFolder")
                        .WithMany("SubFolders")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentFolder");
                });

            modelBuilder.Entity("Pawgress.Models.Note", b =>
                {
                    b.HasOne("Pawgress.Models.DogProfile", "DogProfile")
                        .WithMany("Notes")
                        .HasForeignKey("DogProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawgress.Models.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DogProfile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pawgress.Models.QuizQuestion", b =>
                {
                    b.HasOne("Pawgress.Models.Quiz", null)
                        .WithMany("QuizQuestions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pawgress.Models.User_DogProfile", b =>
                {
                    b.HasOne("Pawgress.Models.DogProfile", "DogProfile")
                        .WithMany("UserDogProfiles")
                        .HasForeignKey("DogProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawgress.Models.User", "User")
                        .WithMany("DogProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DogProfile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pawgress.Models.User_TrainingPath", b =>
                {
                    b.HasOne("Pawgress.Models.TrainingPath", "TrainingPath")
                        .WithMany("Users")
                        .HasForeignKey("TrainingPathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawgress.Models.User", "User")
                        .WithMany("TrainingPaths")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPath");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrainingPathItemOrder", b =>
                {
                    b.HasOne("Pawgress.Models.TrainingPath", "TrainingPath")
                        .WithMany("TrainingPathItems")
                        .HasForeignKey("TrainingPathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pawgress.Models.TrainingPathItem", "TrainingPathItem")
                        .WithMany("TrainingPaths")
                        .HasForeignKey("TrainingPathItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPath");

                    b.Navigation("TrainingPathItem");
                });

            modelBuilder.Entity("Pawgress.Models.Lesson", b =>
                {
                    b.HasOne("Pawgress.Models.Folder", null)
                        .WithMany("Lessons")
                        .HasForeignKey("FolderId");
                });

            modelBuilder.Entity("Pawgress.Models.Quiz", b =>
                {
                    b.HasOne("Pawgress.Models.Folder", null)
                        .WithMany("Quizzes")
                        .HasForeignKey("FolderId");
                });

            modelBuilder.Entity("Pawgress.Models.DogProfile", b =>
                {
                    b.Navigation("DogSensorDatas");

                    b.Navigation("Notes");

                    b.Navigation("UserDogProfiles");
                });

            modelBuilder.Entity("Pawgress.Models.Folder", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("Quizzes");

                    b.Navigation("SubFolders");
                });

            modelBuilder.Entity("Pawgress.Models.Library", b =>
                {
                    b.Navigation("LibraryLessons");

                    b.Navigation("LibraryQuizzes");
                });

            modelBuilder.Entity("Pawgress.Models.TrainingPath", b =>
                {
                    b.Navigation("TrainingPathItems");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pawgress.Models.TrainingPathItem", b =>
                {
                    b.Navigation("TrainingPaths");
                });

            modelBuilder.Entity("Pawgress.Models.User", b =>
                {
                    b.Navigation("DogProfiles");

                    b.Navigation("Notes");

                    b.Navigation("TrainingPaths");
                });

            modelBuilder.Entity("Pawgress.Models.Lesson", b =>
                {
                    b.Navigation("LibraryLessons");
                });

            modelBuilder.Entity("Pawgress.Models.Quiz", b =>
                {
                    b.Navigation("LibraryQuizzes");

                    b.Navigation("QuizQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
